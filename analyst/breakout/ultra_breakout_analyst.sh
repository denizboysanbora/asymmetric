#!/bin/bash
# Ultra MCP Breakout Analyst - Maximum Performance Edition
# Schedule: Every 30 minutes during market hours (9:30 AM - 4:00 PM ET), weekdays only
# Uses Ultra MCP Analyst for maximum speed and efficiency

set -euo pipefail

# Process locking to prevent duplicate executions
LOCK_FILE="/tmp/ultra_breakout_analyst.lock"
if [ -f "$LOCK_FILE" ]; then
    PID=$(cat "$LOCK_FILE")
    if ps -p "$PID" > /dev/null 2>&1; then
        echo "$(date '+%Y-%m-%d %H:%M:%S') Ultra breakout analyst already running (PID: $PID), skipping..." >> /Users/deniz/Code/asymmetric/analyst/breakout/logs/ultra_breakout_analyst.log
        exit 0
    else
        rm -f "$LOCK_FILE"
    fi
fi
echo $$ > "$LOCK_FILE"
trap 'rm -f "$LOCK_FILE"' EXIT

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# Repo root (two levels up from analyst/breakout/): .../asymmetric
ASYMMETRIC_DIR="$(cd "$SCRIPT_DIR/../.." && pwd)"

# Load environment variables
if [ -f "$ASYMMETRIC_DIR/analyst/config/api_keys.env" ]; then
    source "$ASYMMETRIC_DIR/analyst/config/api_keys.env"
fi

# Directories
OUTPUT_DIR="$ASYMMETRIC_DIR/analyst/output"
ALPACA_DIR="$ASYMMETRIC_DIR/analyst/input/alpaca"
GMAIL_DIR="$OUTPUT_DIR/gmail"

# Python executables
PYTHON_CMD="$ALPACA_DIR/venv/bin/python3"  # Use venv Python for Ultra MCP Analyst
GMAIL_PY="$ALPACA_DIR/venv/bin/python3"  # Use venv Python for Gmail

# Scripts
ULTRA_SCRIPT="$SCRIPT_DIR/ultra_mcp_analyst.py"
EMAIL_SCRIPT="$GMAIL_DIR/send_email.py"

# Recipient
RECIPIENT="deniz@bora.box"

# Log files
LOG_DIR="$SCRIPT_DIR/logs"
mkdir -p "$LOG_DIR"
LOG_FILE="$LOG_DIR/ultra_breakout_analyst.log"

# Timestamp
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

echo "[$TIMESTAMP] üöÄ Ultra MCP Breakout analyst starting maximum performance analysis..." | tee -a "$LOG_FILE"

# Check if we're within operating hours (9:30 AM - 4:00 PM Eastern, weekdays)
CURRENT_HOUR=$(TZ='America/New_York' date '+%H')
CURRENT_MIN=$(TZ='America/New_York' date '+%M')
CURRENT_DOW=$(TZ='America/New_York' date '+%u')  # 1=Monday, 7=Sunday

# Convert to minutes for easier comparison (9:30 AM = 570 minutes, 4:00 PM = 960 minutes)
CURRENT_MINUTES=$((CURRENT_HOUR * 60 + CURRENT_MIN))

if [ "$CURRENT_MINUTES" -lt 570 ] || [ "$CURRENT_MINUTES" -ge 960 ] || [ "$CURRENT_DOW" -gt 5 ]; then
    echo "[$TIMESTAMP] Outside operating hours (9:30 AM - 4:00 PM ET, weekdays). Current time: $CURRENT_HOUR:$CURRENT_MIN, day: $CURRENT_DOW" | tee -a "$LOG_FILE"
    exit 0
fi

# ========================================
# ULTRA MCP BREAKOUT ANALYST
# ========================================
echo "[$TIMESTAMP] üéØ Running Ultra MCP breakout scanner (885 stocks)..." | tee -a "$LOG_FILE"

# Run Ultra MCP Analyst and capture output
ULTRA_OUTPUT=$($PYTHON_CMD "$ULTRA_SCRIPT" --max-stocks 0 --top-n 10 2>&1) || {
    echo "[$TIMESTAMP] ‚ùå Ultra MCP scan failed: $ULTRA_OUTPUT" | tee -a "$LOG_FILE"
    ULTRA_OUTPUT=""
}

# Extract breakout signals (lines starting with $SYMBOL)
BREAKOUT_SIGNALS=$(echo "$ULTRA_OUTPUT" | grep '^\$[A-Z0-9]' || true)
TOP_BREAKOUT=$(echo "$BREAKOUT_SIGNALS" | head -1)
BREAKOUT_COUNT=$(echo "$BREAKOUT_SIGNALS" | wc -l)

if [ -n "$BREAKOUT_SIGNALS" ]; then
    echo "[$TIMESTAMP] üéØ Ultra MCP Breakout setups detected!" | tee -a "$LOG_FILE"
    
    # Use the top breakout setup
    if [ -n "$TOP_BREAKOUT" ]; then
        echo "[$TIMESTAMP] Selected breakout: $TOP_BREAKOUT" | tee -a "$LOG_FILE"
        
        # Use simple subject
        EMAIL_SUBJECT="Signal"
        
        # Create email body with all signals
        EMAIL_BODY="Ultra MCP Breakout Analysis Results:
        
Timestamp: $TIMESTAMP
Market Hours: 9:30 AM - 4:00 PM ET
Universe Scanned: 885 liquid stocks
Analysis Method: Ultra-fast mega-batch processing

üéØ BREAKOUT SIGNALS FOUND:
$BREAKOUT_SIGNALS

üìä Analysis Summary:
‚Ä¢ Total Signals: $BREAKOUT_COUNT
‚Ä¢ Top Signal: $TOP_BREAKOUT
‚Ä¢ Scanner: Ultra MCP Analyst (Maximum Performance)
‚Ä¢ Processing: 18 mega-batches of 50 stocks each

üîß Technical Details:
‚Ä¢ Flag Breakouts: Prior impulse + tight consolidation + breakout
‚Ä¢ Range Breakouts: Tight range + ATR contraction + volume + breakout
‚Ä¢ Criteria: Strict quality filters for high-confidence signals

Generated by Ultra MCP Analyst v1.0"
        
        # Send email notification
        if $GMAIL_PY "$EMAIL_SCRIPT" "$RECIPIENT" "$EMAIL_SUBJECT" "$EMAIL_BODY" 2>/dev/null; then
            echo "[$TIMESTAMP] üìß Ultra MCP email sent: $TOP_BREAKOUT" | tee -a "$LOG_FILE"
        else
            echo "[$TIMESTAMP] ‚ùå Ultra MCP email failed: $TOP_BREAKOUT" | tee -a "$LOG_FILE"
        fi
        
        # Output to console
        echo "$TOP_BREAKOUT"
    fi
else
    echo "[$TIMESTAMP] Ultra MCP Breakout: No setups found" | tee -a "$LOG_FILE"
fi

echo "[$TIMESTAMP] üöÄ Ultra MCP Breakout analyst analysis complete - Breakout setups found: $BREAKOUT_COUNT" | tee -a "$LOG_FILE"
